Description: fix assertion failure via improper cleanup
Origin: backported from 9.10.6-P1

Index: bind9-9.10.3.dfsg.P4/lib/dns/resolver.c
===================================================================
--- bind9-9.10.3.dfsg.P4.orig/lib/dns/resolver.c	2018-01-16 07:13:45.000000000 -0500
+++ bind9-9.10.3.dfsg.P4/lib/dns/resolver.c	2018-01-16 07:23:03.486146966 -0500
@@ -1178,14 +1178,18 @@ fctx_cleanupaltaddrs(fetchctx_t *fctx) {
 }
 
 static inline void
-fctx_stopeverything(fetchctx_t *fctx, isc_boolean_t no_response) {
-	FCTXTRACE("stopeverything");
+fctx_stopqueries(fetchctx_t *fctx, isc_boolean_t no_response) {
+	FCTXTRACE("stopqueries");
 	fctx_cancelqueries(fctx, no_response);
+	fctx_stoptimer(fctx);
+}
+
+static inline void
+fctx_cleanupall(fetchctx_t *fctx) {
 	fctx_cleanupfinds(fctx);
 	fctx_cleanupaltfinds(fctx);
 	fctx_cleanupforwaddrs(fctx);
 	fctx_cleanupaltaddrs(fctx);
-	fctx_stoptimer(fctx);
 }
 
 #ifdef ENABLE_FETCHLIMIT
@@ -1437,7 +1441,7 @@ fctx_done(fetchctx_t *fctx, isc_result_t
 		no_response = ISC_FALSE;
 
 	fctx->reason = NULL;
-	fctx_stopeverything(fctx, no_response);
+	fctx_stopqueries(fctx, no_response);
 
 	LOCK(&res->buckets[fctx->bucketnum].lock);
 
@@ -3932,11 +3936,12 @@ fctx_doshutdown(isc_task_t *task, isc_ev
 		dns_resolver_cancelfetch(fctx->nsfetch);
 
 	/*
-	 * Shut down anything that is still running on behalf of this
-	 * fetch.  To avoid deadlock with the ADB, we must do this
-	 * before we lock the bucket lock.
+	 * Shut down anything still running on behalf of this
+	 * fetch, and clean up finds and addresses.  To avoid deadlock
+	 * with the ADB, we must do this before we lock the bucket lock.
 	 */
-	fctx_stopeverything(fctx, ISC_FALSE);
+	fctx_stopqueries(fctx, ISC_FALSE);
+	fctx_cleanupall(fctx);
 
 	LOCK(&res->buckets[bucketnum].lock);
 
